// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  name      String?
  password  String
  role      Role     @default(USER)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  logs      Log[]
  createdTrains Train[] @relation("TrainCreator")
  controller Controller?
  
  @@map("users")
}

model Train {
  id          String      @id @default(cuid())
  trainId     String      @unique
  type        TrainType
  schedule    DateTime
  status      TrainStatus @default(SCHEDULED)
  section     String
  platform    String?
  priority    Priority    @default(MEDIUM)
  delay       Int         @default(0) // in minutes
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt

  // Relations
  creatorId   String?
  creator     User?       @relation("TrainCreator", fields: [creatorId], references: [id])
  logs        Log[]
  
  @@map("trains")
}

model Controller {
  id             String   @id @default(cuid())
  userId         String   @unique
  assignedSection String
  isActive       Boolean  @default(true)
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt

  // Relations
  user           User     @relation(fields: [userId], references: [id])
  logs           Log[]
  
  @@map("controllers")
}

model Log {
  id          String      @id @default(cuid())
  action      String
  timestamp   DateTime    @default(now())
  userId      String?
  trainId     String?
  controllerId String?
  disruption  String?
  details     String?
  
  // Relations
  user        User?       @relation(fields: [userId], references: [id])
  train       Train?      @relation(fields: [trainId], references: [id])
  controller  Controller? @relation(fields: [controllerId], references: [id])
  
  @@map("logs")
}

// Enums
enum Role {
  ADMIN
  CONTROLLER
  USER
}

enum TrainType {
  PASSENGER
  EXPRESS
  FREIGHT
  LOCAL
}

enum TrainStatus {
  SCHEDULED
  RUNNING
  DELAYED
  CANCELLED
  COMPLETED
}

enum Priority {
  LOW
  MEDIUM
  HIGH
  URGENT
}